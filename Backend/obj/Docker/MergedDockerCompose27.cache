name: dockercompose17429419173169761438
services:
  apigateway:
    build:
      context: C:\Users\Surface\source\repos\HiloCinema\Backend
      dockerfile: APIGateway/APIGateway/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
    image: apigateway
    networks:
      backend: null
    ports:
      - mode: ingress
        target: 8080
        protocol: tcp
  movieservice:
    build:
      context: C:\Users\Surface\source\repos\HiloCinema\Backend
      dockerfile: Services/MovieService/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      ConnectionStrings__DefaultConnection: Data Source=sqlserver;Initial Catalog=Movie;User ID=sa;Trust Server Certificate=True;
    image: movieservice
    networks:
      backend: null
    ports:
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\Surface\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Surface\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
  sqlserver:
    environment:
      ACCEPT_EULA: "Y"
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      backend: null
    ports:
      - mode: ingress
        target: 1433
        published: "1433"
        protocol: tcp
    volumes:
      - type: volume
        source: sqlserverdata
        target: /var/opt/mssql
        volume: {}
networks:
  backend:
    name: dockercompose17429419173169761438_backend
volumes:
  sqlserverdata:
    name: dockercompose17429419173169761438_sqlserverdata